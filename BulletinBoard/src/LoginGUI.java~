import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.geom.RoundRectangle2D;

public class LoginGUI extends JFrame {
    private JTextField usernameField;
    private JTextField receiverField;
    private JButton connectButton;
    private String clientName;
    private String otherClientName;

    // For window dragging
    private Point initialClick;

    public LoginGUI() {
        // Restore standard look and feel
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            e.printStackTrace();
        }

        // Frame setup
        setTitle("Connect Chat");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(500, 450);
        setLocationRelativeTo(null);

        // Enable moving the window
        addWindowMovement();

        // Use a more flexible layout
        setLayout(new GridBagLayout());
        getContentPane().setBackground(new Color(240, 242, 245));
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(10, 10, 10, 10);
        gbc.gridwidth = GridBagConstraints.REMAINDER;
        gbc.fill = GridBagConstraints.HORIZONTAL;

        // Modern title
        JLabel titleLabel = new JLabel("Connect to Chat", SwingConstants.CENTER);
        titleLabel.setFont(new Font("Segoe UI", Font.BOLD, 26));
        titleLabel.setForeground(new Color(33, 33, 33));
        gbc.weighty = 0.1;
        add(titleLabel, gbc);

        // Username input section
        gbc.weighty = 0;
        JLabel usernameLabel = new JLabel("Your Username");
        usernameLabel.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        usernameLabel.setForeground(new Color(66, 66, 66));
        add(usernameLabel, gbc);

        usernameField = createStyledTextField();
        add(usernameField, gbc);

        // Receiver username input section
        JLabel receiverLabel = new JLabel("Receiver's Username");
        receiverLabel.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        receiverLabel.setForeground(new Color(66, 66, 66));
        add(receiverLabel, gbc);

        receiverField = createStyledTextField();
        add(receiverField, gbc);

        // Connect button with modern styling
        connectButton = new JButton("Start Conversation") {
            @Override
            protected void paintComponent(Graphics g) {
                Graphics2D g2 = (Graphics2D) g.create();
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                // Soft gradient
                g2.setPaint(new GradientPaint(
                        0, 0, new Color(73, 132, 255),
                        0, getHeight(), new Color(63, 81, 181)
                ));

                // Rounded rectangle
                g2.fill(new RoundRectangle2D.Double(
                        0, 0, getWidth(), getHeight(), 15, 15
                ));

                g2.dispose();
                super.paintComponent(g);
            }
        };

        // Button styling
        connectButton.setFont(new Font("Segoe UI", Font.BOLD, 16));
        connectButton.setForeground(Color.WHITE);
        connectButton.setFocusPainted(false);
        connectButton.setBorderPainted(false);
        connectButton.setContentAreaFilled(false);

        gbc.weighty = 0.3;
        connectButton.addActionListener(this::login);
        add(connectButton, gbc);

        pack();
        setVisible(true);
    }

    // Add ability to move the window
    private void addWindowMovement() {
        addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent e) {
                initialClick = e.getPoint();
                getComponentAt(initialClick);
            }
        });

        addMouseMotionListener(new MouseAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                // get location of Window
                int thisX = getLocation().x;
                int thisY = getLocation().y;

                // Determine how much the mouse moved since the initial click
                int xMoved = e.getX() - initialClick.x;
                int yMoved = e.getY() - initialClick.y;

                // Move window to this position
                int X = thisX + xMoved;
                int Y = thisY + yMoved;
                setLocation(X, Y);
            }
        });
    }

    // Custom styled text field
    private JTextField createStyledTextField() {
        JTextField textField = new JTextField(20);
        textField.setFont(new Font("Segoe UI", Font.PLAIN, 16));
        textField.setBorder(BorderFactory.createCompoundBorder(
                BorderFactory.createLineBorder(new Color(200, 200, 200), 1, true),
                BorderFactory.createEmptyBorder(5, 10, 5, 10)
        ));

        return textField;
    }

    // Login method
    private void login(ActionEvent e) {
        clientName = usernameField.getText();
        otherClientName = receiverField.getText();

        if (clientName.isEmpty() || otherClientName.isEmpty()) {
            JOptionPane.showMessageDialog(
                    this,
                    "Please enter both usernames",
                    "Connection Error",
                    JOptionPane.ERROR_MESSAGE
            );
            return;
        }

        dispose();
    }

    // Getters
    public String getClientName() {
        return clientName;
    }

    public String getOtherClientName() {
        return otherClientName;
    }

    public boolean isReady() {
        return clientName != null && otherClientName != null;
    }

    // Main method
    public static void main(String[] args) {
        SwingUtilities.invokeLater(LoginGUI::new);
    }
}